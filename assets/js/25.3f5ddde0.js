(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{586:function(n,e,t){"use strict";t.r(e);var s=t(55),r=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_115-distinct-subsequences"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_115-distinct-subsequences"}},[n._v("#")]),n._v(" 115. Distinct Subsequences")]),n._v(" "),t("p",[n._v("Question Link is "),t("a",{attrs:{href:"https://leetcode.com/problems/distinct-subsequences/",target:"_blank",rel:"noopener noreferrer"}},[n._v("here")]),n._v(".")]),n._v(" "),t("p",[n._v("I am too busy today, so I will just post this solution and update is tomorrow.")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class Solution:\n    def numDistinct(self, s: str, t: str) -> int:\n        dp = [[0] * (len(t)+1) for _ in range(len(s)+1)]\n        for i in range(len(s)):\n            dp[i][0] = 1\n        for j in range(1, len(t)):\n            dp[0][j] = 0\n        for i in range(1, len(s)+1):\n            for j in range(1, len(t)+1):\n                if s[i-1] == t[j-1]:\n                    dp[i][j] = dp[i-1][j-1] + dp[i-1][j]\n                else:\n                    dp[i][j] = dp[i-1][j]\n        return dp[-1][-1]\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);